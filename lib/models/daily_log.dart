import 'package:hive/hive.dart';
import 'task_entry.dart';

part 'daily_log.g.dart'; // Generated by build_runner

@HiveType(typeId: 1)
class DailyLog extends HiveObject {
  @HiveField(0)
  final String userId;

  @HiveField(1)
  final String dateString; // YYYY-MM-DD format

  @HiveField(2)
  List<TaskEntry> tasks;

  @HiveField(3)
  bool isSynced;

  @HiveField(4) // New field for conflict resolution
  DateTime? lastModified;


  DailyLog({
    required this.userId,
    required this.dateString,
    required this.tasks,
    this.isSynced = false,
    this.lastModified,
  });

  // For Firestore serialization
  Map<String, dynamic> toJson() => {
    'userId': userId,
    'dateString': dateString,
    'tasks': tasks.map((task) => task.toJson()).toList(),
    'isSynced': isSynced,
    'lastModified': lastModified?.toIso8601String() ?? DateTime.now().toIso8601String(),
  };

  factory DailyLog.fromJson(Map<String, dynamic> json) {
    var taskList = json['tasks'] as List<dynamic>? ?? [];
    return DailyLog(
      userId: json['userId'] as String,
      dateString: json['dateString'] as String,
      tasks: taskList.map((taskJson) => TaskEntry.fromJson(taskJson as Map<String, dynamic>)).toList(),
      isSynced: json['isSynced'] as bool? ?? false, // Default to false if missing
      lastModified: json['lastModified'] != null ? DateTime.parse(json['lastModified'] as String) : null,
    );
  }
}